// Code generated by goa v3.22.3, DO NOT EDIT.
//
// user service
//
// Command:
// $ goa gen github.com/neatflowcv/key-stone/design

package user

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Service is the user service interface.
type Service interface {
	// Create implements create.
	Create(context.Context, *CreatePayload) (err error)
	// Delete implements delete.
	Delete(context.Context, *DeleteUserPayload) (err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "key-stone"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "v0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "user"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"create", "delete"}

// CreatePayload is the payload type of the user service create method.
type CreatePayload struct {
	User *UserInput
}

// DeleteUserPayload is the payload type of the user service delete method.
type DeleteUserPayload struct {
	// The payload of the user
	Authorization string
}

type UserInput struct {
	// The name of the user
	Name string
	// The password of the user
	Password string
	// The payload of the user
	Payload map[string]any
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "BadRequest", false, false, false)
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "Unauthorized", false, false, false)
}

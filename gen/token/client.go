// Code generated by goa v3.22.5, DO NOT EDIT.
//
// token client
//
// Command:
// $ goa gen github.com/neatflowcv/key-stone/design

package token

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "token" service client.
type Client struct {
	IssueEndpoint   goa.Endpoint
	RefreshEndpoint goa.Endpoint
}

// NewClient initializes a "token" service client given the endpoints.
func NewClient(issue, refresh goa.Endpoint) *Client {
	return &Client{
		IssueEndpoint:   issue,
		RefreshEndpoint: refresh,
	}
}

// Issue calls the "issue" endpoint of the "token" service.
// Issue may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError): Unauthorized
//   - "InternalServerError" (type *goa.ServiceError): Internal Server Error
//   - error: internal error
func (c *Client) Issue(ctx context.Context, p *IssueInput) (res *TokenDetail, err error) {
	var ires any
	ires, err = c.IssueEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TokenDetail), nil
}

// Refresh calls the "refresh" endpoint of the "token" service.
// Refresh may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError): Unauthorized
//   - "InternalServerError" (type *goa.ServiceError): Internal Server Error
//   - error: internal error
func (c *Client) Refresh(ctx context.Context, p *RefreshInput) (res *TokenDetail, err error) {
	var ires any
	ires, err = c.RefreshEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TokenDetail), nil
}

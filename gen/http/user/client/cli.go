// Code generated by goa v3.22.3, DO NOT EDIT.
//
// user HTTP client CLI support package
//
// Command:
// $ goa gen github.com/neatflowcv/key-stone/design

package client

import (
	"encoding/json"
	"fmt"

	user "github.com/neatflowcv/key-stone/gen/user"
	goa "goa.design/goa/v3/pkg"
)

// BuildCreatePayload builds the payload for the user create endpoint from CLI
// flags.
func BuildCreatePayload(userCreateBody string) (*user.CreatePayload, error) {
	var err error
	var body CreateRequestBody
	{
		err = json.Unmarshal([]byte(userCreateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"user\": {\n         \"name\": \"Dolores fuga asperiores voluptatem aspernatur eum.\",\n         \"password\": \"Sapiente temporibus vel.\",\n         \"payload\": {\n            \"Dolorem delectus fugit.\": \"Quia illum facere distinctio quam sunt.\",\n            \"Et rerum quia odit voluptas repudiandae.\": \"Quo dolores.\"\n         }\n      }\n   }'")
		}
		if body.User == nil {
			err = goa.MergeErrors(err, goa.MissingFieldError("user", "body"))
		}
		if err != nil {
			return nil, err
		}
	}
	v := &user.CreatePayload{}
	if body.User != nil {
		v.User = marshalUserInputRequestBodyToUserUserInput(body.User)
	}

	return v, nil
}

// BuildDeletePayload builds the payload for the user delete endpoint from CLI
// flags.
func BuildDeletePayload(userDeleteAuthorization string) (*user.DeleteUserPayload, error) {
	var authorization string
	{
		authorization = userDeleteAuthorization
	}
	v := &user.DeleteUserPayload{}
	v.Authorization = authorization

	return v, nil
}

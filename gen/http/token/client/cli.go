// Code generated by goa v3.22.2, DO NOT EDIT.
//
// token HTTP client CLI support package
//
// Command:
// $ goa gen github.com/neatflowcv/key-stone/design

package client

import (
	"encoding/json"
	"fmt"

	token "github.com/neatflowcv/key-stone/gen/token"
)

// BuildIssuePayload builds the payload for the token issue endpoint from CLI
// flags.
func BuildIssuePayload(tokenIssueBody string) (*token.IssuePayload, error) {
	var err error
	var body IssueRequestBody
	{
		err = json.Unmarshal([]byte(tokenIssueBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"user\": {\n         \"password\": \"Fuga vel omnis neque quas animi.\",\n         \"username\": \"Iusto ad officia vel.\"\n      }\n   }'")
		}
	}
	v := &token.IssuePayload{}
	if body.User != nil {
		v.User = marshalIssueInputRequestBodyToTokenIssueInput(body.User)
	}

	return v, nil
}

// BuildRefreshPayload builds the payload for the token refresh endpoint from
// CLI flags.
func BuildRefreshPayload(tokenRefreshBody string) (*token.RefreshPayload, error) {
	var err error
	var body RefreshRequestBody
	{
		err = json.Unmarshal([]byte(tokenRefreshBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"token\": {\n         \"access_token\": \"Suscipit non ad adipisci accusamus.\",\n         \"refresh_token\": \"Praesentium dolore.\"\n      }\n   }'")
		}
	}
	v := &token.RefreshPayload{}
	if body.Token != nil {
		v.Token = marshalRefreshInputRequestBodyToTokenRefreshInput(body.Token)
	}

	return v, nil
}
